name: Upload code scanning results to Threadfix
description: Get code scanning results from GitHub and push them to your Threadfix application
branding:
  icon: 'award'
  color: 'green'
inputs:
  TFIX_API_KEY:
    description: The API key for your Threadfix instance.
    required: true
  TFIX_INSTANCE_URL:
    description: The URL for your Threadfix instance.
    required: true
  TFIX_APP_ID:
    description: The ID of the Threadfix application to which you want to upload the code scanning results.
    required: true
runs:
  using: "composite"
  steps:
    - name: Get code scanning alerts
      run: |
             latest_import_time=$(curl --location --request GET '${{inputs.TFIX_INSTANCE_URL}}/threadfix/rest/latest/applications/1/scans' \
             --header 'Accept: application/json' \
             --header 'Authorization: APIKEY ${{inputs.TFIX_API_KEY}}' | jq '.object[0].importTime')
             timestamp_conversion=$(TZ=GMT date -d @$(($latest_import_time/1000)) +"%a, %d %b %Y %T %Z")
             http_status=$( gh api repos/${{ github.repository }}/code-scanning/alerts -H "If-Modified-Since: $timestamp_conversion" -i | grep "HTTP" | awk '{print $2}')
             if [ "$http_status" == "304" ]; then
               echo "No new alerts found, terminating"
               exit 0;
             else
               gh api repos/${{ github.repository }}/code-scanning/alerts --paginate | jq --slurp 'flatten' > ./input_file.json
             fi
      shell: bash
      env:
         GITHUB_TOKEN: ${{github.token}}
    - name: Validate file 
      run : cat input_file.json | grep "number" >/dev/null && echo "got data!" || exit 1; 
      shell: bash
    - name: Convert to Threadfix format
      run: python ${{github.action_path}}/threadfix_converter.py input_file.json output_file.threadfix
      shell: bash
    - name: Push results to Threadfix
      run: |
            curl --location --request POST '${{inputs.TFIX_INSTANCE_URL}}/threadfix/rest/latest/applications/${{inputs.TFIX_APP_ID}}/upload' \
            --header 'Accept: application/json' \
            --header 'Authorization: APIKEY ${{inputs.TFIX_API_KEY}}' \
            --form 'file=@"output_file.threadfix"'
      shell: bash