name: Upload code scanning results to Threadfix
description: Get code scanning results from GitHub and push them to your Threadfix application
branding:
  icon: 'award'
  color: 'green'
inputs:
  TFIX_API_KEY:
    description: The API key for your Threadfix instance.
    required: true
  TFIX_INSTANCE_URL:
    description: The URL for your Threadfix instance.
    required: true
  TFIX_APP_ID:
    description: The ID of the Threadfix application to which you want to upload the code scanning results.
    required: true
runs:
  using: "composite"
  steps:
    - name: Get code scanning alerts
      run: gh api -X GET repos/${{github.repository}}/code-scanning/alerts -F state=open -F ref=${{github.ref}} --paginate | jq --slurp 'flatten' > ./input_file.json
      shell: bash
      env:
         GITHUB_TOKEN: ${{github.token}}
    - name: Validate file 
      run : if test -f "input_file.json"; then echo "got data"; else exit 1; fi
      shell: bash
    - name: Convert to Threadfix format
      run: |
            string_to_hash="${{github.repository}}_${{github.ref}}"
            hash_value=$(echo -n "$string_to_hash" | sha256sum | cut -d ' ' -f 1)
            truncated_hash_value=$(echo "$hash_value" | cut -c 1-255)
            python ${{github.action_path}}/threadfix_converter.py input_file.json output_file.threadfix $truncated_hash_value
      shell: bash
    - name: Push results to Threadfix
      run: |
            curl --location --request POST '${{inputs.TFIX_INSTANCE_URL}}/threadfix/rest/latest/applications/${{inputs.TFIX_APP_ID}}/upload' \
            --header 'Accept: application/json' \
            --header 'Authorization: APIKEY ${{inputs.TFIX_API_KEY}}' \
            --form 'file=@"output_file.threadfix"'
      shell: bash
